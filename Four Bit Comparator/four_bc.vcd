$date
	Mon Sep 21 23:40:52 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module stimulus $end
$var wire 1 ! m $end
$var wire 1 " l $end
$var wire 1 # k $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module f1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 # k $end
$var wire 1 " l $end
$var wire 1 ! m $end
$var wire 1 ( m2 $end
$var wire 1 ) m1 $end
$var wire 1 * l2 $end
$var wire 1 + l1 $end
$var wire 1 , k2 $end
$var wire 1 - k1 $end
$scope module c1 $end
$var wire 2 . a [1:0] $end
$var wire 2 / b [1:0] $end
$var wire 1 - k $end
$var wire 1 + l $end
$var wire 1 ) m $end
$upscope $end
$scope module c2 $end
$var wire 2 0 a [1:0] $end
$var wire 2 1 b [1:0] $end
$var wire 1 , k $end
$var wire 1 * l $end
$var wire 1 ( m $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 1
b11 0
b10 /
b0 .
0-
1,
0+
0*
1)
0(
b1010 '
b1100 &
b1010 %
b1100 $
1#
0"
0!
$end
#20
b1 .
b1101 $
b1101 &
#50
1"
0#
1+
0,
1*
0)
b1 /
b11 1
b1101 %
b1101 '
#90
1!
0+
0"
1(
0*
1-
b11 .
b10 0
b1011 $
b1011 &
#110
1+
0-
b11 /
b1111 %
b1111 '
#120
1"
1*
0!
0(
b10 1
b1011 %
b1011 '
#130
